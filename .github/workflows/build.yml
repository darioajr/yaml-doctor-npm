name: Build and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18, 20, 22]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm ci

      - name: Run validation
        run: npm run validate

      - name: Test CLI help
        run: node dist/cli.js --help

      - name: Test CLI with sample files
        run: node dist/cli.js --path test-files

      - name: Test JSON output
        run: node dist/cli.js --path test-files --json

  build-package:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Generate .tgz package
        run: npm pack

      - name: Get package info
        id: pkg
        shell: bash
        run: |
          echo "name=$(node -p 'require(\"./package.json\").name')" >> $GITHUB_OUTPUT
          echo "version=$(node -p 'require(\"./package.json\").version')" >> $GITHUB_OUTPUT

      - name: Upload package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.pkg.outputs.name }}-${{ steps.pkg.outputs.version }}
          path: "*.tgz"
          retention-days: 30
