name: Publish to npm

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Debug environment
        run: |
          echo "Working directory: $(pwd)"
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
          echo "Repository contents:"
          ls -la

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Verify build output
        run: |
          echo "Checking if dist directory exists..."
          ls -la dist/
          echo "Checking if cli.js exists..."
          ls -la dist/cli.js

      - name: Run validation
        run: npm run validate

      - name: Run basic validation (optional)
        run: |
          echo "Testing CLI help command..."
          node dist/cli.js --help || echo "CLI help failed, but continuing..."

      - name: Test CLI with sample files
        run: |
          echo "Testing CLI with sample files..."
          if [ -d "test-files" ]; then
            node dist/cli.js --path test-files
          else
            echo "test-files directory not found, skipping..."
          fi

      - name: Generate .tgz package
        run: npm pack

      - name: Get package version
        id: pkg
        shell: bash
        run: |
          echo "version=$(node -p 'require("./package.json").version')" >> $GITHUB_OUTPUT

      - name: Upload .tgz as artifact
        uses: actions/upload-artifact@v4
        with:
          name: yaml-doctor-${{ steps.pkg.outputs.version }}.tgz
          path: "*.tgz"

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm config set //registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN
          npm publish --access public
